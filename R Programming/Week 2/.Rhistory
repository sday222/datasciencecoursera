install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse", lib="/usr/local/Cellar/r/4.2.3/lib/R/library")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages(c("MASS", "survival"), lib="/usr/local/Cellar/r/4.2.3/lib/R/library")
install.packages("tidyquant")
swirl
library(swirl)
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info(mytest.R)
file.info("mytest.R")
args(file.rename)
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.info("mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir3"), recursive = TRUE)
info()
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
list.files()
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(1, 20, by = 0.5)
seq(1, 20, by=0.5)
seq(0, 20, by = 0.5)
seq(0, 10, by = 0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2, time = 10))
rep(c(0,1,2, times = 10))
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Sean")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(z, y), 100)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
print(my_na)
my_na
my_data == NA
sum(my_na == TRUE)
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 6)]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
View(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
?rbinom
gc()
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
(5 == 7) == !TRUE
5 == !7
5 != 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical("twins", "twins")
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
cl()
cl
telegram <- function(...) {
paste("START ", ..., " STOP")
}
telegram("Good", "morning")
mad_libs <- function(...){
# Do your argument unpacking here!
args <- list(...)
place <- args[["place"]]
adjective <- args[["adjective"]]
noun <- args[["noun"]]
# Don't modify any code below this comment.
# Notice the variables you'll need to create in order for the code below to
# be functional!
paste("News from", place, "today where", adjective, "students took to the streets in protest of the new", noun, "being installed on campus.")
}
mad_libs("help", "me", "out")
str(mad_libs)
mad_libs
t2 <- Sys.Date()
str(t2)
t2
unclass(t2)
class(t2)
t2 <- as.POSIXlt(Sys.time())
t2
unclass(t2)
str(t2)
str(unclass(t2))
setwd("~/Documents/GitHub/datasciencecoursera/R Programming/Week 2")
pollutant = ""
pollutantmean <- function(directory, pollutant, id = 1:332) {
for (i in id) {
print(i)
}
}
pollutantmean("", "", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for (i in id) {
print(paste(directory, i))
}
}
pollutantmean("test", "", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for (i in id) {
print(directory, i)
}
}
pollutantmean("test", "", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for (i in id) {
print(directoryi)
}
}
pollutantmean("test", "", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for (i in id) {
print(directory i)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for (i in id) {
print(directory & i)
}
}
pollutantmean("test", "", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for (i in id) {
print(paste(directory, i, sep = "/"))
}
}
pollutantmean("test", "", 1:10)
read.csv("specdata/1")
read.csv("specdata/1.csv")
read.csv("specdata/001")
read.csv("specdata/001.csv")
list.files("specdata")
